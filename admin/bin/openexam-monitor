#!/bin/bash
#
# This script starts performance monitors and could be run at boot time. By default, 
# all enabled performance collectors are started using settings from the system
# configuration.
#
# Either tweak the settings in config.def or use a custom function for starting the
# collection, see run_perf_monitors() below.
#
# The collectors are prepared to be run with dropped privileges. Only some collectors
# requires root-permissions (e.g. apache).
# 
# Author: Anders LÃ¶vgren
# Date:   2016-06-12

# Standard user for running counters:
user="daemon"

# Script to run:
script="$(which openexam >& /dev/null)"

# The mapping between collector and process user:
declare -A users=([system]=$user [server]=$user [apache]=root [mysql]=$user [net]=$user [fs]=$user [part]=$user [disk]=$user)

# Extra options:
#options="--verbose --force"

# Use script in current directory:
if [ -z "$script" ]; then
  script="$(dirname $(realpath $0))/openexam"
fi

# Sanity check:
if ! [ -e "$script" ]; then
  echo "$0: missing openexam script to run, please check or define the path"
  exit 1
fi 

function run_perf_monitors()
{
    $script --performance --collect --server --uid=$user --rate=10
    $script --performance --collect --apache --uid=root  --rate=15  --user=apache
    $script --performance --collect --mysql  --uid=$user --rate=10 
    $script --performance --collect --net    --uid=$user --rate=5   --name=eth0:br0
    $script --performance --collect --fs     --uid=$user --rate=60  --path=/var/data:/home --type=ext4:btrfs:xfs
    $script --performance --collect --disk   --uid=$user --rate=300 --disk=sda
    $script --performance --collect --part   --uid=$user --rate=300 --part=/dev/sda1:/dev/md0
}

function start_perf_monitor()
{
    counters=$($script --performance --list)
    for c in $counters; do 
        $script --performance --collect --$c --uid=${users[$c]} $options &
    done
}

function stop_perf_monitor()
{
    counters=$($script --performance --list)
    for c in $counters; do 
        pkill -xf ".*$script --performance --collect --$c.*"
    done
}

case "$1" in
    --start)
        start_perf_monitor
        ;;
    --stop)
        stop_perf_monitor
        ;;
    --restart)
        stop_perf_monitor
        start_perf_monitor
        ;;
    *)
        echo "usage: $0 --start|--stop|--restart"
esac
