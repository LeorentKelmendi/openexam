<?php

// 
// The source code is copyrighted, with equal shared rights, between the
// authors (see the file AUTHORS) and the OpenExam project, Uppsala University 
// unless otherwise explicit stated elsewhere.
// 
// File:    catalog.def
// Created: 2014-10-31 10:13:11
// 
// Author:  Anders LÃ¶vgren (Computing Department at BMC, Uppsala University)
// 


use OpenExam\Library\Catalog\DirectoryService\LdapService;
use OpenExam\Library\Catalog\Affiliation;
use OpenExam\Library\Catalog\Group;
use OpenExam\Library\Catalog\Principal;

// 
// The array of catalog (directory information) services. 
// 
// The example config below should give some hints on how to setup multiple 
// directory services.
// 

return array(
        // 
        // An corporate LDAP service:
        // 
        'ldap'  => array(
                'service' => function() {
                        $service = new LdapService(
                            'ldaps://ldap.example.com', 636, 'user', 'secret'
                        );
                        // 
                        // Remap object class attributes:
                        // 
                        $service->setAttributeMap(array(
                                'person' => array(
                                        Principal::ATTR_PNR  => 'socialNumber',
                                        Principal::ATTR_MAIL => 'email',
                                        Principal::ATTR_PN   => 'userid'
                                ),
                                'group' => array(
                                        Group::ATTR_NAME => 'cn'
                                )
                        ));
                        $service->setBase('ou=employees,dc=example,dc=com');
                        return $service;
                },
                'domains' => array(
                        'domain1.example.com', 'domain2.example.com'
                )
        ),
        // 
        // The LDAP service in active directory:
        // 
        'msad'  => array(
                'service' => function() {
                        $service = new LdapService(
                            'ldaps://dc.example.com', 636, 'user@example.com', 'secret', array(
                                    LDAP_OPT_REFERRALS        => false,
                                    LDAP_OPT_PROTOCOL_VERSION => 3
                                )
                        );
                        $service->setAttributeMap(array(
                                'person' => array(
                                        Principal::ATTR_PN    => 'userPrincipalName',
                                        Principal::ATTR_UID   => 'sAMAccountName',
                                        Principal::ATTR_NAME  => 'displayName',
                                        Principal::ATTR_AFFIL => 'memberOf'
                                )
                        ));
                        // 
                        // Set user affiliation using callback:
                        // 
                        $service->setAffiliationCallback(function($attrs) {
                                foreach($attrs as $index => $value) {
                                        if($value == 'CN=Employee,DC=users,DC=example,DC=com') {
                                                $attrs[$index] = Affiliation::EMPLOYEE;
                                        }
                                        if($value == 'CN=Student,DC=users,DC=example,DC=com') {
                                                $attrs[$index] = Affiliation::STUDENT;
                                        }
                                }
                                return $attrs;
                        });
                        // 
                        // Set user affiliation using attribute map:
                        // 
                        $service->setAffiliationMap(array(
                                Affiliation::EMPLOYEE => 
                                        'CN=Employees,DC=users,DC=example,DC=com',
                                Affiliation::STUDENT  => array(
                                        'CN=Group1,OU=Student,DC=users,DC=example,DC=com',
                                        'CN=Group2,OU=Student,DC=users,DC=example,DC=com'
                                )
                        ));
                        $service->setBase('dc=users,dc=example,dc=com');
                        return $service;
                },
                'domains' => 'example.com'
        )
);
