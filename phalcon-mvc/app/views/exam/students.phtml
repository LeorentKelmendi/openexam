<!-- Main area -->

<?= Phalcon\Tag::stylesheetLink('css/tablesorter.default.css'); ?>
<?= Phalcon\Tag::javascriptInclude('js/jquery.tablesorter.js'); ?>

<?php

use OpenExam\Library\Gui\Component\DateTime\Relative as DateTime;

$i = 0;
$stList = array();

foreach ($exam->students as $student) {
        $stList[$i]["id"] = $student->id;
        $stList[$i]["value"] = $student->user . " - " . $student->code;
        $i++;
}

$cdt = new DateTime($exam->starttime, $exam->endtime);

if (!$cdt->stime) {
        $cdt->startdate = strftime('%x', time());
        $cdt->starttime = strftime('%H:%M', time());
}
if (!$cdt->etime) {
        $cdt->enddate = strftime('%x', time());
        $cdt->endtime = strftime('%H:%M', time());
}

?>

<style>
    td[data-modified="true"] {
        border: 1px solid #ccff99;
        background-color: #99ff99;
    }
    .st-exam-item-save {
        white-space: nowrap;
    }
</style>
<div id="st-mng-wrapper" exam-id="<?= $this->request->getPost('exam_id') ?>">
    <div style="padding-bottom:15px">
        <h3><?= $exam->name ?></h3>
    </div>
    <div class="tabs">
        <ul>
            <li><a href="#tabs-1">Add new students</a></li>
            <li><a href="#tabs-2">Manage existing students</a></li>
        </ul>
        <div id="tabs-1">

            <div class="accordion">
                <h3>Add single or multiple students</h3>
                <div>
                    <p>
                        Write identities (username or personal number) and anonymous code (optional, system will generate one if missing) of single or multiple students. 
                        Separate identity and anonymous code by whitespace.
                    </p>
                    <div class="alert alert-info gw-box fade in" style="padding-top: 8px; padding-bottom: 8px; position: inherit; width: unset; font-weight: normal; text-align: left">
                        Input multiple students at once by separating them with newline:
                        <br>
                        <small>
                            <strong>identity1 code1</strong><br />
                            <strong>identity1 code2</strong>                        
                        </small>
                    </div>
                    <textarea id="student_list" placeholder="user@example.com 1234ABCD" style="height:100px; width:480px"></textarea>

                    <div style="display: block; margin:10px 0px 30px 0px;">   
                        <span id="add_students_btn" class="btn btn-success">
                            <i class="fa fa-chevron-circle-right"></i>
                            <span>Add students</span>
                        </span>
                    </div>                                
                </div>
                <h3>Import from file</h3>
                <div>
                    <div id="student-file-import-content">
                        <p>
                            Upload the file containing students to import. Students can be imported by username or personal number, with optional supplied anonymous code and/or tag.
                        </p>
                        <form id="student-file-import" name="student-file-import">
                            <input type="file" name="file[]" />                                
                            <div class="btn-group" style="padding-top: 5px">
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"> Filetype 
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a href="#" type='-1'>Auto Detect</a></li>
                                    <li><a href="#" type='oocalc'>OpenDocument Format Spreadsheet (*.ods,*.ots)</a></li>
                                    <li><a href="#" type='excel2007'>Microsoft Excel 2007/2010/2013 XML (*.xlsx)</a></li>
                                    <li><a href="#" type='excel2003'>Microsoft Excel 2003 XML (*.xml)</a></li>
                                    <li><a href="#" type='excel97'>Microsoft Excel 97/2000/XP/2003 (*.xls,*.xlt)</a></li>
                                    <li><a href="#" type='tab'>TAB Separated Values (*.tab,*.tsv,*.txt)</a></li>
                                    <li><a href="#" type='csv'>CSV File (*.csv)</a></li>
                                    <li><a href="#" type='gnumeric'>Gnumeric Spreadsheet (*.gnumeric)</a></li>
                                    <li><a href="#" type='html'>HTML Document (*.htm,*.html)</a></li>
                                    <li><a href="#" type='sylk'>SYLK Document (*.slk,*.sylk)</a></li>
                                </ul>
                                <div id='file-type' type='-1' style="padding: 5px 0"><span style="margin-left: 10px">Auto Detect</span></div>
                            </div>
                        </form>
                    </div>

                    <div style="display: block; margin:10px 0px 30px 0px;">        
                        <span id="import-students-by-file" class="btn btn-success">
                            <i class="fa fa-chevron-circle-right"></i>
                            <span>Import students</span>
                        </span>
                    </div>                                
                </div>
                <h3>Import from group</h3>
                <div>
                    <div id="student-group-import-content">
                        <p>
                            Supply the name of a group to import students from. The name could e.g. be a course code or a domain group. The search can be restricted to a single domain.
                        </p>
                        <form id="student-file-import" name="student-group-import">
                            <div>
                                <label for="group">Group name:</label>
                                <input id="group-name" type="text" name="group" placeholder="3MK579" /><br />
                                <label for="domain">Domain:</label> 
                                <select id="domain-name" name="domain">
                                    <option></option>
                                    <?php foreach ($domains as $domain): ?>
                                            <option><?= $domain ?></option>
                                    <?php endforeach; ?>
                                </select>
                            </div>
                        </form>
                    </div>

                    <div style="display: block; margin:10px 0px 30px 0px;">   
                        <span id="import-students-by-group" class="btn btn-success">
                            <i class="fa fa-chevron-circle-right"></i>
                            <span>Import students</span>
                        </span>
                    </div> 
                </div>
            </div>
        </div>
        <div id="tabs-2">
            <h4>Registered students in this exam</h4>

            <div class="alert alert-info gw-box fade in" style="padding-top: 8px; padding-bottom: 8px; position: inherit; width: unset; font-weight: normal; text-align: left">
                Click inside table cells to edit their content. Dates are omitted from display whenever they coincidence with exam start or end date. 
                Input time as hh:mm with optional date, use the suggested date/time as a guide.
            </div>

            <div style="clear:both"></div>

            <?php if (!count($exam->students)): ?>
                    <div id="no-student-msg">
                        <em>No students have been added to the exam yet.</em>
                    </div>
            <?php else: ?>
                    <div id="print-students-list" style="float:left; display: inline; margin-bottom: 10px; margin-right: 5px;">        
                        <span class="btn btn-success">
                            <i class="fa fa-print"></i>
                            <span>Download</span>
                        </span>
                    </div>                                

                    <div style="float:left; margin-bottom: 10px;">
                        <span id='del-st-btn' class="btn btn-danger" style="display: none">
                            <i class="fa fa-trash-o"></i>
                            <span></span>
                        </span>
                    </div>
                    <div style="float:right">
                        <input id="search-students" type="text" placeholder="Filter students" style="width:145px; height:15px;" />
                        <span class="label label-orange filter-students"><i style="color:#FFF" class="fa fa-search"></i></span>
                    </div>
                    <table id="all-students-table" style="width:100%" class="tablesorter">
                        <thead>
                            <tr>
                                <th class="no-sort"><input id="select_all_students" type="checkbox" value="1"></th>
                                <th>Name</th>
                                <th>Username</th>
                                <th>Person no.</th>
                                <th>Start time</th>
                                <th>End time</th>
                                <th>Code</th>
                                <th>Tag</th>
                            </tr>    
                        </thead>
                        <tbody>
                            <?php foreach ($exam->students as $student): ?>
                                    <tr style="background-color:#D9ECF2;">
                                        <td><input name="students[]" type="checkbox" value="<?= $student->id ?>"></td>
                                        <td>
                                            <a href="#" data-id="<?= $student->id ?>" class="st-exam-detail" style="color:blue">
                                                <?= $student->display ?>
                                            </a>
                                        </td>
                                        <?php
                                        $sdt = new DateTime($exam->starttime, $student->starttime);
                                        $edt = new DateTime($exam->endtime, $student->endtime);

                                        if ($sdt->etime) {
                                                $sdt->time = $sdt->endtime;
                                                $sdt->date = $sdt->enddate;
                                        } else {
                                                $sdt->time = $cdt->starttime;
                                                $sdt->date = $cdt->startdate;
                                        }

                                        if ($edt->etime) {
                                                $edt->time = $edt->endtime;
                                                $edt->date = $edt->enddate;
                                        } else {
                                                $edt->time = $cdt->endtime;
                                                $edt->date = $cdt->enddate;
                                        }

                                        ?>
                                        <td><?= $student->user ?></td>
                                        <td><?= $student->persnr ?></td>
                                        <td class="st-exam-item-edit" data-name="starttime" data-exam-date="<?= $cdt->startdate ?>" data-stud-date="<?= $sdt->date ?>" data-stud-time="<?= $sdt->time ?>"><?= $sdt->text() ?></td>
                                        <td class="st-exam-item-edit" data-name="endtime" data-exam-date="<?= $cdt->enddate ?>" data-stud-date="<?= $edt->date ?>" data-stud-time="<?= $edt->time ?>"><?= $edt->text() ?></td>
                                        <td class="st-exam-item-edit" data-name="code" data-stud-code="<?= $student->code ?>"><?= $student->code ?></td>
                                        <td class="st-exam-item-edit" data-name="tag" data-stud-tag="<?= $student->tag ?>"><?= $student->tag ?></td>
                                        <td class="st-exam-item-save">
                                            <span class="btn btn-default" style="visibility: hidden; display: inline-table">
                                                <i class="fa fa-save"></i>
                                                <span>Save</span>
                                            </span>
                                        </td>
                                    </tr>
                                    <tr class="st-detail-rows" style="display:none;" id="st-detail-row<?= $student->id ?>">
                                        <td colspan="10" style="background-color:#ffe;"></td>
                                    </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
            <?php endif; ?>
            <div style="clear:both"></div>
        </div>
    </div>
</div>

<script language="javascript">
        var studentList = <?= json_encode($stList) ?>;

        (function () {

            $('.tablesorter').tablesorter({
                usNumberFormat: false,
                sortReset: true,
                sortRestart: true,
                sortList: [[0, 0], [1, 0]],
                headers: {
                    '.no-sort': {
                        sorter: false
                    }
                }
            });

            $('.tabs').tabs();
            $(".accordion").accordion({
                heightStyle: "content"
            });

            if (stEvents === 'loaded') {
                return;
            } else {
                stEvents = 'loaded';
            }

            // 
            // Called after students has been added to exam.
            // 
            // @param int examId The exam ID.
            // 
            var onStudentInserted = function (examId) {

                $.ajax({
                    type: "POST",
                    data: {'exam_id': examId},
                    url: baseURL + 'exam/students/',
                    success: function (content) {
                        // 
                        // Replace dialog content:
                        // 
                        $("#manage-students").html(content);

                        // 
                        // Switch to second tab:
                        // 
                        $(".tabs").tabs("option", "active", 1);
                        $('#no-student-msg').hide();
                    }
                });
            };

            // 
            // Edit student properties inline.
            // 
            $(document).on('click', '.st-exam-item-edit', function () {
                if ($(this).attr("contenteditable")) {
                    return false; // Already editing.
                }

                $(this).attr("contenteditable", true);
                $(this).focus();
                $(this).parent().find("span.btn").css("visibility", "visible");

                var type = $(this).attr('data-name');

                if (type === 'starttime' || type === 'endtime') {
                    if ($(this).text().length === 0) {
                        $(this).attr("data-modified", true);
                    }
                    var date = $(this).attr('data-stud-date');
                    var time = $(this).attr('data-stud-time');
                    $(this).text(date + ' ' + time);
                }
            });

            // 
            // Refresh display and update attribute values.
            // 
            $(document).on('blur', '.st-exam-item-edit', function () {
                $(this).removeAttr("contenteditable");

                var type = $(this).attr('data-name');

                if (type === 'starttime' || type === 'endtime') {
                    var part = $(this).text().split(" ");

                    // 
                    // Check if date is invalid:
                    // 
                    if (part.length > 1) {
                        if (isNaN(Date.parse($(this).text()))) {
                            $(this).text($(this).attr('data-stud-date') + ' ' + $(this).attr('data-stud-time'));
                            return false;
                        }
                    } else {
                        if (isNaN(Date.parse($(this).attr('data-exam-date') + ' ' + $(this).text()))) {
                            $(this).text($(this).attr('data-stud-date') + ' ' + $(this).attr('data-stud-time'));
                            return false;
                        }
                    }

                    if (part.length > 1) {
                        if ($(this).attr('data-stud-date') !== part[0] || $(this).attr('data-stud-time') !== part[1]) {
                            $(this).attr("data-modified", true);
                        }
                        $(this).attr('data-stud-date', part[0]);
                        $(this).attr('data-stud-time', part[1]);
                    } else {
                        if ($(this).attr('data-stud-time') !== part[0]) {
                            $(this).attr("data-modified", true);
                        }
                        if ($(this).attr('data-stud-date') !== $(this).attr('data-exam-date')) {
                            $(this).attr("data-modified", true);
                        }
                        $(this).attr('data-stud-time', part[0]);
                        $(this).attr('data-stud-date', $(this).attr('data-exam-date'));
                    }
                    if ($(this).attr('data-stud-date') === $(this).attr('data-exam-date')) {
                        $(this).text($(this).attr('data-stud-time'));
                    }
                    if ($(this).attr('data-stud-time').length === 0) {
                        $(this).attr('data-stud-date', "");
                    }
                } else if (type === 'code') {
                    if ($(this).attr('data-stud-code') !== $(this).text()) {
                        $(this).attr('data-stud-code', $(this).text());
                        $(this).attr("data-modified", true);
                    }
                } else if (type === 'tag') {
                    if ($(this).attr('data-stud-tag') !== $(this).text()) {
                        $(this).attr('data-stud-tag', $(this).text());
                        $(this).attr("data-modified", true);
                    }
                }
            });

            // 
            // Save student properties.
            // 
            $(document).on('click', '.st-exam-item-save', function () {
                var data = {};
                var button = $(this).find("span.btn");
                var tblrow = $(this).parent();

                // 
                // Add editable item values to data object:
                // 
                $(this).parent().find(".st-exam-item-edit[data-modified=true]").each(function () {
                    var type = $(this).attr('data-name');

                    if (type === 'starttime' || type === 'endtime') {
                        data[type] = $(this).attr("data-stud-date") + ' ' + $(this).attr("data-stud-time");
                    } else if (type === 'code') {
                        data[type] = $(this).attr("data-stud-code");
                    } else if (type === 'tag') {
                        data[type] = $(this).attr("data-stud-tag");
                    }

                    data[type] = data[type].trim();
                });

                // 
                // Get student ID from data-id attribute:
                // 
                data.id = $(this).parent().find(".st-exam-detail").attr("data-id");

                // 
                // Send AJAX request. Hide save button on success.
                // 
                ajax(
                        baseURL + 'ajax/core/invigilator/student/update',
                        JSON.stringify(data),
                        function (response) {
                            if (response === true) {
                                button.css("visibility", "hidden");
                                tblrow.find(".st-exam-item-edit[data-modified=true]").each(function () {
                                    $(this).removeAttr("data-modified");
                                });
                            }
                        }
                );
            });

            // 
            // Unlock exam lock preventing student from using another computer.
            // 
            $(document).on("click", "#unlock-student", function () {
                var dataId = $(this).attr('data-id');
                var studId = $(this).attr('stud-id');
                ajax(
                        baseURL + 'ajax/core/invigilator/lock/delete',
                        {"id": dataId},
                        function (status) {
                            $('a[data-id="' + studId + '"]').click();
                        });
            });

            // 
            // Approve prending student connection on exam.
            // 
            $(document).on("click", "#approve-student", function () {
                var dataId = $(this).attr('data-id');
                var studId = $(this).attr('stud-id');
                ajax(
                        baseURL + 'ajax/core/invigilator/lock/update',
                        {"id": $(this).attr('data-id'), "status": "approved"},
                        function (status) {
                            $('a[data-id="' + studId + '"]').click();
                        }
                );
            });

            // 
            // Reload exam lock status panel.
            // 
            $(document).on("click", "#lock-status-refresh", function () {
                $('a[data-id="' + $(this).attr('data-id') + '"]').click();
            });

            $(document).on("keyup", "#search-students", function () {
                var value = jQuery.trim($(this).val());
                $("table tr").each(function (index) {
                    if (index !== 0 && !$(this).hasClass('st-detail-rows')) {

                        $row = $(this);
                        $row.find("td").each(function (i, elem) {
                            if (jQuery.trim($(elem).text()).indexOf(value) !== 0) {
                                $row.hide();
                            } else {
                                $row.show();
                                return false;
                            }
                        });
                    }
                });
                $(".tablesorter").trigger("update");
                var sorting = [[0, 0], [1, 0]];
                $(".tablesorter").trigger("sorton", [sorting]);
            });

            $(document).on('click', '.st-exam-detail', function () {
                var row = $(this).closest("tr");
                var sid = $(this).attr('data-id');
                $.ajax({
                    url: baseURL + 'exam/lock',
                    type: 'POST',
                    cache: false,
                    data: {"student_id": $(this).attr('data-id')}
                }).done(function (result) {
                    $('.st-detail-rows').hide();
                    $('#st-detail-row' + sid).show(500).insertAfter(row).find('td').html(result);
                });
                return false;
            });

            $(".tablesorter").bind("sortBegin", function (e, table) {
                $('.st-detail-rows').hide();
            });

            $(document).on('change', '#select_all_students', function () {
                $('input[name="students[]"]').prop("checked", this.checked);
            });

            $(document).on('click', '.del-student', function () {
                var student = $(this);
                if (confirm("Are you sure you want to delete this student?")) {
                    ajax(
                            baseURL + 'ajax/core/invigilator/student/delete',
                            {"id": $(this).attr('data-id')},
                            function (status) {
                                jQuery.each(studentList, function (i, sData) {
                                    if (typeof sData !== 'undefined' && sData.id === $(student).attr('data-id')) {
                                        delete studentList[i];
                                    }
                                });

                                // 
                                // Hide from list:
                                // 
                                $(student).parent().slideUp('500', function () {
                                    $(this).remove();
                                });
                                if ($('.total-exam-students')) {
                                    $('.total-exam-students').html($('.student-list').find('li').length - 1);
                                }

                            }
                    );
                }
            });

            $(document).on('click', '#add_students_btn', function () {

                var stData = [];
                var examId = $(this).closest('#st-mng-wrapper').attr('exam-id');
                if (examId) {
                    stList = jQuery.trim($('#student_list').val()).split("\n");

                    //
                    // Prepare data object:
                    // 
                    $.each(stList, function (i, val) {
                        if (jQuery.trim(val) !== '') {
                            st = jQuery.trim(val).split(/\s/g);
                            if (st.length > 2) {
                                var tmp = '';
                                jQuery.each(st, function (i, e) {
                                    if (i) {
                                        tmp = tmp + " " + e;
                                    }
                                });
                                st[1] = jQuery.trim(tmp);
                            }

                            stData.push({'exam_id': examId, "user": st[0], "code": st[1]});
                        }
                    });

                    // 
                    // Send AJAX request to add these students to the exam:
                    // 
                    ajax(
                            baseURL + 'ajax/core/invigilator/student/create',
                            JSON.stringify(stData),
                            function (userData) {
                                onStudentInserted(examId);
                            }
                    );
                }
            });

            // 
            // On select file type (file import):
            // 
            $(document).on('click', 'ul.dropdown-menu > li > a', function () {
                var target = $("div#file-type");
                target.children().first().text($(this).text()); // Display
                target.attr('type', $(this).attr('type')); // Save type
            });

            // 
            // Handle students file upload:
            // 
            $(document).on('click', '#import-students-by-file', function () {

                var data = new FormData($('form#student-file-import')[0]);
                data.append('type', $('#file-type').attr('type'));
                data.append('exam_id', $(this).closest('#st-mng-wrapper').attr('exam-id'));

                $.ajax({
                    url: baseURL + '/utility/import/students/file',
                    type: 'POST',
                    data: data,
                    cache: false,
                    contentType: false, // Prevent corrupted boundary strings.
                    processData: false    // No need to process data.
                }).done(function (result) {
                    $('#student-file-import-content').html(result);
                    $('#student-file-import-content').attr('id', 'student-data-import-content');
                    $('#import-students-by-file').attr('id', 'import-students-by-table');
                }).fail(function (message) {
                    alert("Failed submit form");
                });
            });

            // 
            // Handle student group import:
            // 
            $(document).on('click', '#import-students-by-group', function () {

                var data = new FormData($('form#student-group-import')[0]);
                data.append('group', $('#group-name').val());
                data.append('domain', $('#domain-name').val());
                data.append('exam_id', $(this).closest('#st-mng-wrapper').attr('exam-id'));

                $.ajax({
                    url: baseURL + '/utility/import/students/group',
                    type: 'POST',
                    data: data,
                    cache: false,
                    contentType: false, // Prevent corrupted boundary strings.
                    processData: false    // No need to process data.
                }).done(function (result) {
                    $('#student-group-import-content').html(result);
                    $('#student-group-import-content').attr('id', 'student-data-import-content');
                    $('#import-students-by-group').attr('id', 'import-students-by-table');
                }).fail(function (message) {
                    alert("Failed submit form");
                });
            });

            // 
            // Import students from table data (file or group import):
            // 
            $(document).on('click', '#import-students-by-table', function () {

                var examId = $(this).closest('#st-mng-wrapper').attr('exam-id');
                var stdata = [], sthead = [];

                // 
                // Create column type lookup table:
                // 
                $('#table-import-students thead tr th').each(function (i) {
                    sthead[i] = $(this).val();
                });

                // 
                // Process table body. Add students to object array:
                // 
                $('#table-import-students tbody tr').each(function () {
                    var stuobj = {'exam_id': examId};
                    $(this).find('td').each(function (i) {
                        switch (sthead[i]) {
                            case 'user':
                                if ($(this).text() !== "") {
                                    stuobj.user = $(this).text();
                                }
                                break;
                            case 'code':
                                if ($(this).text() !== "") {
                                    stuobj.code = $(this).text();
                                }
                                break;
                            case 'tag':
                                if ($(this).text() !== "") {
                                    stuobj.tag = $(this).text();
                                }
                                break;
                            case 'pnr':
                                if ($(this).text() !== "" && stuobj.user === undefined) {
                                    stuobj.user = $(this).text();
                                }
                                break;
                        }
                    });
                    if (stuobj.user !== undefined && stuobj.user !== "") {
                        stdata.push(stuobj);
                    }
                });
                if (stdata.length === 0) {
                    alert("No student selected for import");
                    return;
                }

                // 
                // Send AJAX request to add students:
                // 
                ajax(
                        baseURL + 'ajax/core/invigilator/student/create',
                        JSON.stringify(stdata),
                        function (result) {
                            onStudentInserted(examId);
                        });
            });

            // 
            // Attach event for student deletion button
            // 
            $(document).on('change', 'input[name="students[]"], #select_all_students', function () {
                if ($('input[name="students[]"]:checked').length) {
                    $('#del-st-btn > span').html("Delete selected students (" + $('input[name="students[]"]:checked').length + ")").parent().show();
                } else {
                    $('#del-st-btn').hide();
                }
            });

            // 
            // Delete selected student:
            // 
            $(document).on('click', '#del-st-btn', function () {
                if (confirm("Are you sure you want to " + $('#del-st-btn > span').html() + "?")) {

                    var delStudent = [];
                    $('input[name="students[]"]:checked').each(function (i, elem) {
                        delStudent.push({'id': $(this).val()});
                    });
                    ajax(
                            baseURL + 'ajax/core/invigilator/student/delete',
                            JSON.stringify(delStudent),
                            function (status) {
                                $('input[name="students[]"]:checked').closest('tr').remove();
                            }
                    );
                }
            });

            // 
            // Handle print student list.
            // 
            $(document).on("click", "#print-students-list", function () {
                var examId = $(this).closest('#st-mng-wrapper').attr('exam-id');
                window.location.href = baseURL + 'utility/export/students/' + examId + '/download';
            });
        })();
</script>
