<?php

use OpenExam\Library\Security\Roles;
use OpenExam\Models\Exam;
use OpenExam\Models\Student;

$overallQuestScore = array();
$totalExamScore = $totalStudentScore = 0;

$studentIds = array();

$grades = preg_split('/[\r\n]+/', $exam->grades);
$examGrades = array();
$passAt = 1000;
foreach ($grades as $k => $grade) :
        $t = explode(":", $grade);
        $examGrades[$t[0]] = $t[1];
        $avgGrades[$t[0]] = 0;
        if ($k == 1) :
                $passAt = $t[1];
        endif;
endforeach;
arsort($examGrades);

if (($exam->details & Exam::SHOW_SUMMARY_DURING_CORRECTION) != 0) {
        $exam->show_percent = true;
}
if (($exam->details & Exam::SHOW_CODE_DURING_CORRECTION) != 0) {
        $exam->show_code = true;
}

if ($exam->decoded || $this->user->acquire(array(Roles::DECODER, Roles::CREATOR), $exam->id)) {
        $exam->show_grades = true;
        $exam->show_percent = true;
}

if ($this->user->acquire(array(Roles::DECODER, Roles::CREATOR), $exam->id) && $exam->getState()->isCorrected()) {
        $exam->show_download = true;
} else {
        $exam->show_download = false;
}

if (!$exam->decoded && $this->user->roles->acquire(Roles::DECODER, $exam->id) && $exam->getState()->isCorrected()) {
        $exam->show_decode = true;
} else {
        $exam->show_decode = false;
}

if (!$exam->getState()->isCorrected()) {
        $exam->show_download = false;
        $exam->show_decode = false;

        if ($exam->decoded) {
                $exam->decoded = false;
                printf("<div class=\"alert alert-warning\">Your exam is flagged as decoded, but some answers are still uncorrected. Please contact the system administrator to resolve this issue.</div>");
        }
}

// 
// Use config defaults for undefined display options:
// 
if (!isset($exam->show_summary)) {
        $exam->show_summary = $this->config->result->show->summary;
}
if (!isset($exam->show_percent)) {
        $exam->show_percent = $this->config->result->show->scores;
}
if (!isset($exam->show_grades)) {
        $exam->show_grades = $this->config->result->show->grades;
}
if (!isset($exam->show_code)) {
        $exam->show_code = $this->config->result->show->code;
}

// 
// Don't display separate column with code if already decoded:
// 
if ($exam->decoded) {
        $exam->show_code = false;
}

?>

<!-- Main area -->
<div id="container" class="left_menu_space" style="width:100%">
    <div id="centerColWide" style="width:95%">
        <div id="mainview">
            <?php if (!$exam->decoded): ?>
                    <h3>Exam correction</h3>
                    <p>Following table shows all answers from students to questions for the examination <strong>"<?= $exam->name ?>"</strong>. </p>
                    <p>Correct answers by student (rows), by question (column) or individual (by index). You can only correct answers for questions published by yourself or those you have been assigned the role as corrector of.</p>
            <?php else: ?>
                    <h3>Exam score board</h3>
                    <p>Following table shows the final result of all students for the examination <strong>"<?= $exam->name ?>"</strong>. </p>
                    <p>You can view the student's answers by student (rows), by question (column) or individual (by index). This exam has been decoded, so it's no longer possible to change student results.</p>
            <?php endif; ?>


            <div>
                <center>
                    <?php if ($exam->show_decode): ?>
                            <button id="decode-exam" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" style="padding: 5px 15px; min-width: 220px" title="Click to decode the exam. Confirmation is required as this is an irreversable operation">
                                <h5 style="font-style:normal; font-size:12px">
                                    <i class="fa fa-check-circle fa-lg" style="color:green"></i> 
                                    Decode this exam.
                                </h5>
                            </button>
                    <?php endif; ?>

                    <?php if ($exam->show_download): ?>
                            <button id="download-scoreboard" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" style="padding: 5px 15px; min-width: 220px" title="Download score board in spreadsheet format">
                                <h5 style="font-style:normal; font-size:12px" >
                                    <i class="fa fa-file-excel-o fa-lg" style="color:#1D9D73"></i>
                                    <span class="download-msg"> Download score board</span>
                                </h5>
                            </button>
                    <?php endif; ?>

                    <?php if ($exam->decoded): ?>
                            <button id="download-results" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" style="padding: 0px 15px; min-width: 220px" title="Download zip-file containing all students result">
                                <h5 style="font-style:normal; font-size:12px" >
                                    <i class="fa fa-file-pdf-o fa-lg" style="color:red"></i>
                                    <span class="download-msg"> Download student results</span>
                                </h5>
                            </button>
                    <?php endif; ?>
                </center>
            </div>	

            <div style="overflow:scroll" id="scoreboard-wrapper">
                <table class="tablesorter">
                    <thead>
                        <tr>
                            <?php foreach ($questions as $qNo => $question): ?>
                                    <?php
                                    $href = $this->url->get('exam/' . $exam->id . '/correction/question/' . $question->id);
                                    $desc = "Correctors: ";

                                    $correctors = array();
                                    foreach ($question->correctors as $corrector) {
                                            $correctors[] = $corrector->name;
                                    }
                                    $desc .= implode(", ", $correctors);

                                    ?>
                                    <th style="background-color:#EAEAEA; width:35px; text-align:center; " class="sorter-false">
                            <div style="text-align: center">
                                <a class="fb fancybox.ajax fill" href="<?= $href ?>" title="<?= $desc ?>">Q<?= $question->slot ?><br>Max. <?= $question->score ?></a>
                            </div>

                            </th>
                            <?php $totalExamScore += $question->score; ?>
                    <?php endforeach; ?>

                    <th style="background-color:#EAEAEA; width:62px" class="sortable">
                        Student
                    </th>
                    <?php if ($exam->show_code): ?>
                            <th style="background-color:#EAEAEA; width:62px" class="sortable">
                                Code
                            </th>
                    <?php endif; ?>
                    <?php if ($exam->decoded): ?>
                            <th style="background-color:#EAEAEA; width:62px" class="sortable">
                                F. name
                            </th>
                            <th style="background-color:#EAEAEA; width:62px" class="sortable">
                                L. name
                            </th>
                            <th style="background-color:#EAEAEA; width:62px" class="sortable">
                                P No.
                            </th>
                    <?php endif; ?>
                    <?php if ($exam->show_percent): ?>
                            <th style="background-color:#EAEAEA; width:35px; text-align:center; " class="sortable">
                            <div style="text-align: center">
                                Total score
                                <div>Max. <?= $totalExamScore ?></div>
                            </div>
                            </th> 
                            <th class="sortable" style="background-color:#EAEAEA; width:25px; max-width: 25px; text-align:center">%</th>
                    <?php endif; ?>
                    <?php if ($exam->show_grades): ?>
                            <th class="sortable" style="background-color:#EAEAEA; width:25px; max-width: 25px; text-align:center">Grade</th>
                    <?php endif; ?>
                    </tr>
                    </thead>	
                    <tbody>
                        <?php foreach ($students as $student): ?>
                                <tr>
                                    <?php
                                    // 
                                    // Create an answer lookup table:
                                    // 
                                    $studans = $student->answers;
                                    $answers = array();
                                    if ($studans->count() == 0) {
                                            continue;
                                    }
                                    foreach ($studans as $a) {
                                            $answers[$a->question_id] = $a;
                                    }

                                    ?>

                                    <?php $totalStudentScore = 0; ?>
                                    <?php
                                    foreach ($questions as $question):

                                            $result = null;
                                            $qScore = 0;
                                            $answer = isset($answers[$question->id]) ? $answers[$question->id] : false;
                                            if ($answer) {

                                                    $result = $answer->result;
                                                    if (is_object($result) && $result->count()) {

                                                            foreach (json_decode($result->score, true) as $part => $score):
                                                                    $qScore+=$score;
                                                            endforeach;

                                                            if ($qScore < 0) {
                                                                    $qScore = 0;
                                                            }

                                                            $totalStudentScore+=$qScore;
                                                            $overallQuestScore[$question->id][] = $qScore;
                                                    }
                                            }

                                            $qCorrectorList = array();
                                            foreach ($question->getCorrectors() as $qCorrector) :
                                                    $qCorrectorList[] = $qCorrector->user;
                                            endforeach;

                                            ?>

                                            <?php
                                            // find color code
                                            $cLink = true;
                                            if (!$answer) {
                                                    $cc = 'na';
                                                    $cLink = false;
                                            } elseif (is_object($result) && $result->count() && in_array($result->correction, array('completed', 'finalized'))) {
                                                    $cc = 'ac';
                                            } elseif (!in_array($this->user->getPrincipalName(), $qCorrectorList)) {
                                                    $cc = 'no';
                                            } else {
                                                    $cc = 'nc';
                                            }

                                            ?>
                                            <td class="cc <?= $cc ?>">
                                                <?php if ($cLink): ?>
                                                        <a class="fb fancybox.ajax fill" ans-id="<?= $answer->id ?>" 
                                                           href="<?= $this->url->get('exam/' . $exam->id . '/correction/answer/' . $answer->id) ?>">
                                                               <?= (is_object($result) && $result->count()) ? $qScore : '<i class="fa fa-check-square-o"></i>' ?>
                                                        </a>
                                                <?php else: ?>
                                                        <i class="fa fa-ban"></i>
                                                <?php endif; ?>
                                            </td>

                                    <?php endforeach; ?>
                                    <td class="adjustable" style="border-bottom:1px #dedede solid; border-right:5px solid #DDDDDD; background-color:#FFFFFF; width:62px">
                                        <?php if ($exam->decoded): ?>
                                                <a title="download result in pdf format" href="<?= $this->url->get('result/' . $exam->id . '/download/' . $student->id) ?>"><i class="fa fa-file-pdf-o" style="color:red"></i></a>    
                                                &nbsp; &nbsp; &nbsp;
                                        <?php endif; ?> 
                                        <a class="fb fancybox.ajax fill" href="<?= $this->url->get('exam/' . $exam->id . '/correction/student/' . $student->id) ?>">
                                            <?= $exam->decoded ? $student->code : Student . '(' . $student->id . ')' ?>
                                        </a>
                                    </td>
                                    <?php if ($exam->show_code): ?>
                                            <td class="adjustable" style="border-bottom:1px #dedede solid; border-right:5px solid #DDDDDD; background-color:#FFFFFF; width:62px">
                                                <?= $student->code ?>
                                            </td>
                                    <?php endif; ?>
                                    <?php if ($exam->decoded): ?>
                                            <?php $stName = explode(' ', $this->helper->getCatalogAttribute($student->user, 'name'), 2); ?>
                                            <td class="adjustable" style="border-bottom:1px #dedede solid; border-right:5px solid #DDDDDD; background-color:#FFFFFF; width:62px">
                                                    <!--<a class="fb fancybox.ajax" href="<?= $this->url->get('exam/' . $exam->id . '/correction/student/' . $student->id) ?>">-->
                                                <?= $stName[0] ?>
                                                <!--</a>-->
                                            </td>
                                            <td class="adjustable" style="border-bottom:1px #dedede solid; border-right:5px solid #DDDDDD; background-color:#FFFFFF; width:62px">
                                                    <!--<a class="fb fancybox.ajax" href="<?= $this->url->get('exam/' . $exam->id . '/correction/student/' . $student->id) ?>">-->
                                                <?= $stName[1] ?>
                                                <!--</a>-->
                                            </td>
                                            <td class="adjustable" style="border-bottom:1px #dedede solid; border-right:5px solid #DDDDDD; background-color:#FFFFFF; width:62px">
                                                <?= substr(substr_replace($this->helper->getCatalogAttribute($student->user, 'pnr'), "-", 8, 0), 2); ?>
                                            </td>
                                    <?php endif; ?>
                                    <?php if ($exam->show_percent): ?>
                                            <td style="border-bottom:1px #dedede solid; background-color:#FFFFCC; text-align:center">
                                                <?= $totalStudentScore ?>
                                                <?php
                                                if ($answer):
                                                        $avgScore[] = $totalStudentScore;
                                                endif;

                                                ?>                                                                
                                            </td>
                                            <td style="border-bottom:1px #dedede solid; background-color:#FFFFCC; text-align:center">
                                                <?= sprintf("%1.1f", ($totalStudentScore / $totalExamScore) * 100) ?>%
                                                <?php
                                                if ($answer):
                                                        $avgPercentage[] = sprintf("%1.1f", ($totalStudentScore / $totalExamScore) * 100);
                                                endif;

                                                ?>
                                            </td>
                                    <?php endif ?>
                                    <?php if ($exam->show_grades): ?>
                                            <?php
                                            $needGraceMarks = false;
                                            foreach ($examGrades as $grade => $limit) :
                                                    if ((($totalStudentScore / $totalExamScore) * 100) >= $limit) :
                                                            end($examGrades);
                                                            if (key($examGrades) == $grade):
                                                                    if ($passAt - (($totalStudentScore / $totalExamScore) * 100) <= 5) {
                                                                            $colorScheme = 'background-color:#4285F4; color:#FFFFCC';
                                                                            $needGraceMarks = true;
                                                                    } else {
                                                                            $colorScheme = 'background-color:#FF6B4F; color:#FFFFCC';
                                                                    }

                                                            else:
                                                                    $colorScheme = 'background-color:#8BC540; color:#41612c';
                                                            endif;
                                                            break;
                                                    endif;
                                            endforeach;
                                            $avgGrades[$grade] ++;

                                            ?>
                                            <td class="gru" style="border-bottom:1px #dedede solid; text-align:center; font-weight:bold; <?= $colorScheme ?>">
                                                <?= $grade ?> <?= ($needGraceMarks) ? "(" . sprintf("%1.1f", (($passAt / 100) * $totalExamScore) - $totalStudentScore) . " pt. less)" : '' ?>
                                            </td>
                                    <?php endif; ?>
                                </tr>
                                <?php
                                $studentIds[] = $student->id;
                        endforeach;

                        ?>
                    </tbody>	
                    <?php if ($exam->show_summary): ?>
                            <tfoot>
                                <tr class="avarage">
                                    <?php foreach ($questions as $q): ?>
                                            <?php
                                            // 
                                            // Avarage:
                                            // 
                                            if (isset($overallQuestScore[$q->id])) {
                                                    $sumScores = array_sum($overallQuestScore[$q->id]);
                                                    $numScores = count($overallQuestScore[$q->id]);
                                            } else {
                                                    $numScores = 0;
                                            }

                                            // 
                                            // Fixup for division by zero warning:
                                            // 
                                            if ($numScores == 0) {
                                                    $sumScores = 0;
                                                    $numScores = 1;
                                            }
                                            $avgScores = sprintf("%1.1f", $sumScores / $numScores);

                                            // 
                                            // Tooltip:
                                            // 
                                            $ansCount = count($overallQuestScore[$q->id]);

                                            ?>
                                            <td title="Corrected: <?= $ansCount ?> Percent: <?= sprintf("%.02d", ($avgScores / $q->score) * 100) ?>%" class="cc aa">
                                                <?= $avgScores ?> (<?= $q->score ?>)
                                            </td>
                                    <?php endforeach; ?>

                                    <th  class="cc aa" align="right" style="vertical-align:top;">Average:</th>
                                    <?php if ($exam->show_code): ?>
                                            <th align="right" style="vertical-align:top;"></th>
                                    <?php endif; ?>
                                    <?php if ($exam->decoded): ?>
                                            <th align="right" style="vertical-align:top;"></th>
                                            <th align="right" style="vertical-align:top;"></th>
                                            <th align="right" style="vertical-align:top;"></th>
                                    <?php endif; ?>
                                    <?php if ($exam->show_percent): ?>
                                            <td class="cc aa">
                                                <?= sprintf("%1.1f", array_sum($avgScore) / count($avgScore)) ?> (<?= $totalExamScore ?>)
                                            </td>
                                            <td class="cc aa">
                                                <?= sprintf("%1.1f", array_sum($avgPercentage) / count($avgPercentage)) ?>%
                                            </td>
                                    <?php endif; ?>
                                    <?php if ($exam->show_grades): ?>
                                            <td class="cc aa" style="text-align:right; margin:0; padding:0">
                                                <?php foreach ($examGrades as $grade => $limit): ?>
                                                        <div style="padding:1px; "><b><?= $grade ?></b>: <?= $avgGrades[$grade] ?></div>
                                                <?php endforeach; ?>
                                            </td>
                                    <?php endif; ?>
                                </tr>
                            </tfoot>
                    <?php endif; ?>
                </table>
            </div>  

            <h5>Color Codes</h5>
            <p>Following are the color codes used in the score board:</p>
            <table style="margin:0">
                <tbody>
                    <tr class="colorcode">
                        <td class="cc ac">&nbsp;</td>
                        <td>Answer has been corrected.</td>
                    </tr>
                    <?php if (!$exam->decoded && $this->user->getPrincipalName() == $exam->creator): ?>
                            <tr class="colorcode">
                                <td class="cc no">&nbsp;</td>
                                <td>This answer should be corrected by another person.</td>
                            </tr>
                    <?php endif; ?>                                        
                    <tr class="colorcode">
                        <td class="cc na">&nbsp;</td>
                        <td>No answer was given for this question.</td>
                    </tr>
                    <tr class="colorcode">
                        <td class="cc nc">&nbsp;</td>
                        <td>The answer is uncorrected or partially corrected.</td>
                    </tr>
                    <tr class="colorcode">
                        <td class="cc gm">&nbsp;</td>
                        <td>Student can pass with some grace marks.</td>
                    </tr>
                </tbody>
            </table>
            <br />
        </div>
    </div>
    <br clear="both">
    <!-- container --> 
</div>

<!-------------- Hidden Divs --------------->
<div id="dialog" title="Generating exam result">
    <div class="progress-label">Starting...</div>
    <div id="progressbar"></div>
</div>

<?= Phalcon\Tag::stylesheetLink('plugins/jqueryui/themes/blitzer/jquery-ui.css'); ?>
<?= Phalcon\Tag::stylesheetLink('css/tablesorter.default.css'); ?>
<?= Phalcon\Tag::javascriptInclude('plugins/jqueryui/jquery-ui.js'); ?>
<?= Phalcon\Tag::javascriptInclude('js/jquery.tablesorter.js'); ?>
<style>
    #progressbar {
        margin-top: 20px;
    }
    .progress-label {
        font-weight: bold;
        text-shadow: 1px 1px 0 #fff;
    }
    .ui-dialog-titlebar-close {
        display: none;
    }
    .sortme {
        cursor:pointer !important;
    }
</style>

<script language="javascript">
<?php
// 
// Question is currently first in table. Calculate number of columns last in
// table containing meta data (code, name, grade, ...).
// 

$colReorderCount = 1;           // Only student ID

if ($exam->show_percent) {
        $colReorderCount += 2;
}
if ($exam->show_grades) {
        $colReorderCount += 1;
}
if ($exam->show_code) {
        $colReorderCount += 1;
}
if ($exam->decoded) {
        $colReorderCount = 7;
}

?>
        var examId = <?= $exam->id ?>;
        var stIds = <?= json_encode($studentIds) ?>;
        var completedRequests = {};
        var resyncableResults = [];
        $(document).ready(function () {

            // keep column order
            jQuery.each($('#scoreboard-wrapper').find('table').find('tr'), function () {
                if (($(this).children().length)) {
                    for (i = 0; i <<?= $colReorderCount ?>; i++) {
                        $(this).children(":first").before($(this).children(":last"));
                    }
                } else {
                    $(this).remove();
                }
            });

            $('.fb').fancybox({
                'width': "100%",
                'height': "95%",
                'autoSize': false,
                helpers: {
                    overlay: {closeClick: false}
                },
                afterClose: function () {
                    resyncableResults = [];
                    //location.reload();
                }
            });


            $('.tablesorter').tablesorter({
                widgets: ['zebra', 'columns'],
                usNumberFormat: false,
                sortReset: true,
                sortRestart: true,
                sortList: [[0, 0]]
            });


            $(document).on('click', '.save-result', function () {
                var tmp = [];
                tmp.push($(this).attr('ans-id'));
                saveResults(tmp);
            });

            $(document).on('click', '#decode-exam', function () {

                var msg = "Please note that once an exam gets decoded, it will not be possible to change student score any more. \r\n Are you sure you want to decode this exam?";
                if (confirm(msg)) {
                    // decode exam
                    ajax(
                            baseURL + 'ajax/core/decoder/exam/update',
                            {"id": examId, "decoded": "Y"},
                    function (status) {
                        location.reload();
                    }
                    );
                }
            });

            $(document).on('change', '.changeable', function () {
                if (resyncableResults.indexOf($(this).attr('ans-id')) < 0) {
                    resyncableResults.push($(this).attr('ans-id'));
                }
            });

            $(document).on('click', '.save-all-result', function () {
                // 
                // Save result with values, but not yet saved by default. Give
                // caller an option to force save all result.
                // 
                if (resyncableResults.length == 0) {
                    resyncableResults = getSyncableResults('unsaved');
                }

                if (resyncableResults.length == 0) {
                    if (confirm('No result need to be saved. Save anyway?')) {
                        resyncableResults = getSyncableResults('complete');
                    } else {
                        return false;
                    }
                }

                saveResults(resyncableResults);
                resyncableResults = [];
            });

            $(document).on('focus', '.q-points', function () {
                $(this).attr('reset', $(this).val());
            });

            $(document).on('blur', '.q-points', function () {
                if ($(this).val() != '' && !$.isNumeric($(this).val())) {
                    alert("Error: Question points must be numeric");
                    $(this).val($(this).attr('reset'));
                    return false;
                }

                if (Number($(this).val()) > Number($(this).attr('max-pt'))) {
                    alert("Error: Maximum points for this part are:" + $(this).attr('max-pt'));
                    $(this).val($(this).attr('reset'));
                    return false;
                }

            });

            $(document).on('click', '#download-scoreboard', function () {

                var source = $('#scoreboard-wrapper').find('table').clone();
                $(source).find("a").contents().unwrap();
                $(source).find(".adjustable").css('width', '150px');
                $(source).find(".cc").css('width', '80px');
                $.ajax({
                    type: "POST",
                    url: baseURL + 'result/exportScoreBoard/' + examId,
                    data: {score_board: '<table border="1">' + $(source).html() + '</table>'}
                })
                        .done(function (resp) {
                            if (resp == 'exported') {
                                location.href = baseURL + 'result/exportScoreBoard/' + examId + "/1";
                            }
                        });

            });


            $('#containerflarp').css('width', '92%');

            // 
            // Get syncable results. The mode defines which ans-id to return:
            // changed  - Return only manual changed results.
            // unsaved  - Return all not yet saved results.
            // complete - Return all results excluding any unset.
            // 
            var getSyncableResults = function (mode) {
                if (mode == 'changed') {
                    return resyncableResults;
                } else if (mode == 'unsaved') {
                    $('.q-points').each(function () {
                        if (resyncableResults.indexOf($(this).attr('ans-id')) < 0) {
                            if ($(this).val() != '' && $(this).attr('res-id') == 0) {
                                resyncableResults.push($(this).attr('ans-id'));
                            }
                        }
                    });
                    return resyncableResults;
                } else if (mode == 'complete') {
                    $('.q-points').each(function () {
                        if (resyncableResults.indexOf($(this).attr('ans-id')) < 0) {
                            if ($(this).val() != '') {
                                resyncableResults.push($(this).attr('ans-id'));
                            }
                        }
                    });
                    return resyncableResults;
                } else {
                    console.log('Unknown resyncable result mode requested: ' + mode);
                    return [];
                }
            }

            var saveResults = function (ansIds) {
                var resultsCreate = [];
                var resultsUpdate = [];
                var totalCreated = 0;
                ansIds = ansIds.filter(function (aid) {
                    if (typeof (aid) === 'string') {
                        aid = parseInt(aid);
                    }
                    if (aid === undefined || typeof (aid) !== 'number' || isNaN(aid)) {
                        return false;
                    } else {
                        return aid !== 0;
                    }
                });
                $.each(ansIds, function (i, ansId) {
                    var saveResultBtn = $('.ans-id' + ansId);
                    var correctorComents = $(saveResultBtn).parent().parent().find('textarea').val();
                    var correctorId = $(saveResultBtn).attr('corrector-id');
                    var resultJson = {};
                    var resId = ansId = 0;
                    var correctionStatus = 'completed';
                    $(saveResultBtn).closest('.q-body').find('.q-points').each(function (index, element) {
                        if ($.isNumeric($(element).val())) {
                            resultJson[$(element).attr('q-part')] = $(element).val();
                            ansId = $(element).attr('ans-id');
                            resId = $(element).attr('res-id');
                        } else {
                            correctionStatus = 'partial';
                        }
                    });

                    // send ajax requedt to update student's socre
                    if (resId != 0) {
                        resultsUpdate.push({id: resId, "answer_id": ansId, "score": JSON.stringify(resultJson), "comment": correctorComents, "corrector_id": correctorId, "correction": correctionStatus});
                    } else {
                        resultsCreate.push({"answer_id": ansId, "score": JSON.stringify(resultJson), "comment": correctorComents, "corrector_id": correctorId, "correction": correctionStatus});
                        totalCreated++;
                    }

                    if (correctionStatus !== 'partial') {
                        $(saveResultBtn).closest('.q-body').parent().find('.not-corrected').hide('500');
                        $(saveResultBtn).closest('.q-body').css('background-color', '#fff');
                        $(saveResultBtn).closest('.q-body').find('.st-ans-ul').css('background-color', '#F9F9F9');
                    }
                });

                if (resultsCreate.length) {
                    ajax(
                            baseURL + 'ajax/core/corrector/result/create',
                            JSON.stringify(resultsCreate),
                            function (rData) {
                                if (totalCreated > 1) {
                                    jQuery.each(rData, function (i, e) {

                                        $('input[ans-id="' + e.answer_id + '"]').attr('res-id', e.id);

                                        var tScore = 0;
                                        $.each(jQuery.parseJSON(e.score), function (j, sc) {
                                            tScore = tScore + parseFloat(sc);
                                        });

                                        $('a[ans-id="' + e.answer_id + '"]').parent().removeClass('nc').addClass('ac');
                                        $('a[ans-id="' + e.answer_id + '"]').html(tScore);

                                    })
                                } else {
                                    $('input[ans-id="' + rData.answer_id + '"]').attr('res-id', rData.id);

                                    var tScore = 0;
                                    $.each(jQuery.parseJSON(rData.score), function (j, sc) {
                                        tScore = tScore + parseFloat(sc);
                                    });

                                    $('a[ans-id="' + rData.answer_id + '"]').parent().removeClass('nc').addClass('ac');
                                    $('a[ans-id="' + rData.answer_id + '"]').html(tScore);

                                    resyncableResults = jQuery.grep(resyncableResults, function (value) {
                                        return value != rData.answer_id;
                                    });
                                }
                            }
                    );
                }

                if (resultsUpdate.length) {
                    ajax(
                            baseURL + 'ajax/core/corrector/result/update',
                            JSON.stringify(resultsUpdate),
                            function (rData) {
                                resyncableResults = jQuery.grep(resyncableResults, function (value) {
                                    return value != rData.answer_id;
                                });

                                $.each(resultsUpdate, function (i, rec) {

                                    var tScore = 0;
                                    $.each(jQuery.parseJSON(rec.score), function (j, sc) {
                                        tScore = tScore + parseFloat(sc);
                                    });

                                    if (tScore < 0) {
                                        tScore = 0;
                                    }

                                    $('a[ans-id="' + rec.answer_id + '"]').html(tScore);

                                    if (rec.correction === 'waiting' || rec.correction === 'partial') {
                                        $('a[ans-id="' + rec.answer_id + '"]').parent().removeClass('ac').addClass('nc');
                                    }
                                    if (rec.correction === 'completed' || rec.correction === 'finalized') {
                                        $('a[ans-id="' + rec.answer_id + '"]').parent().removeClass('nc').addClass('ac');
                                    }
                                });
                            }
                    );
                }

            }
        });

        $(function () {
            var progressTimer,
                    progressbar = $("#progressbar"),
                    progressLabel = $(".progress-label"),
                    dialogButtons = [{
                            text: "Cancel Download",
                            click: closeDownload
                        }],
                    dialog = $("#dialog").dialog({
                autoOpen: false,
                closeOnEscape: false,
                resizable: false,
                modal: true,
                buttons: dialogButtons,
                open: function () {
                    progressTimer = setTimeout(progress, 0);
                },
                beforeClose: function () {
                    downloadButton.button("option", {
                        disabled: false
                    });
                    downloadButton.find('.download-msg').html('Download result of all students');
                }
            }),
                    downloadButton = $("#download-results")
                    .button()
                    .on("click", function () {

                        //send ajax requests to generate results
                        $.each(stIds, function (i, stId) {

                            $.ajax({
                                type: "POST",
                                url: baseURL + 'result/' + examId + '/generate/' + stId,
                                data: {stId: stId}
                            })
                                    .done(function (resp) {
                                        resp = jQuery.parseJSON(resp);
                                        completedRequests[resp.stId] = 1;
                                    });

                        });
                        $(this).button("option", {
                            disabled: true
                        });
                        $(this).find('.download-msg').html('Generating result ...');
                        dialog.dialog("open");
                    });

            progressbar.progressbar({
                value: false,
                change: function () {
                    progressLabel.text("Current Progress: " + progressbar.progressbar("value") + "%");
                },
                complete: function () {
                    closeDownload();
                    location.href = baseURL + 'result/' + examId + '/download';
                }
            });

            function progress() {

                $('#ajax_loader').hide();

                var val = (((objectLength(completedRequests) + 1) / objectLength(stIds)) * 100) || 0;
                progressbar.progressbar("value", Math.round(val));

                if (val <= 99) {
                    progressTimer = setTimeout(progress, 50);
                }
            }

            function closeDownload() {
                clearTimeout(progressTimer);
                dialog
                        .dialog("option", "buttons", dialogButtons)
                        .dialog("close");

                progressbar.progressbar("value", false);

                progressLabel
                        .text("Starting download...");

                downloadButton.focus();
            }

<?php if (stristr($_SERVER['REQUEST_URI'], 'download-result')): ?>
                    $("#download-results").trigger('click');
<?php endif; ?>
        });
</script>
