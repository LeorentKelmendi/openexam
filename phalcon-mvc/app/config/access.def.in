<?php

// 
// The source code is copyrighted, with equal shared rights, between the
// authors (see the file AUTHORS) and the OpenExam project, Uppsala University 
// unless otherwise explicit stated elsewhere.
// 
// File:    access.def
// Created: 2014-08-28 14:34:23
// 
// Author:  Anders LÃ¶vgren (Computing Department at BMC, Uppsala University)
// 

/** 
 * This map is used for defining the ACL in the system by defining relations 
 * between roles, resources and permissions. 
 * 
 * Except for creator can't have the create (obvious), it should be safe to
 * define any other mappings. 
 */
return array(
        // 
        // Permissions map:
        // 
        'permissions' => array(
                '*'      => '*',
                'read'   => 'read',
                'add'    => array('create', 'read'),
                'modify' => array('read', 'update'),
                'manage' => array('read', 'update', 'delete'),
                'full'   => array('create', 'read', 'update', 'delete')
        ),
        // 
        // Model access map. 
        // 
        // Defines which role are allowed to perform an CRUD operation on an 
        // model. The data structure format are role -> model -> action, where 
        // the model or action might use '*' to mean all access.
        // 
        'roles'       => array(
                'admin'       => '*',
                'teacher'     => array(
                        'exam' => 'add'
                ),
                'creator'     => array(
                        'exam'        => 'manage',
                        'resource'    => '*',
                        'topic'       => '*',
                        'question'    => '*',
                        'contributor' => '*',
                        'decoder'     => '*',
                        'invigilator' => '*',
                        'student'     => 'modify',
                        'corrector'   => '*',
                        'access'      => '*',
                        'answer'      => 'read',
                        'result'      => 'read'
                ),
                'contributor' => array(
                        'exam'        => 'read',
                        'resource'    => '*',
                        'topic'       => 'read',
                        'question'    => '*',
                        'contributor' => 'read',
                        'decoder'     => 'read',
                        'invigilator' => 'read',
                        'corrector'   => 'read'
                ),
                'invigilator' => array(
                        'exam'        => 'modify',
                        'computer'    => 'read',
                        'lock'        => '*',
                        'room'        => 'read',
                        'contributor' => 'read',
                        'decoder'     => 'read',
                        'invigilator' => 'read',
                        'student'     => '*',
                        'access'      => 'modify',
                        // Required for monitor exams:
                        'question'    => 'read',
                        'corrector'   => 'read',
                        'answer'      => 'read'
                ),
                'decoder'     => array(
                        'exam'        => 'modify',
                        'resource'    => 'read',
                        'topic'       => 'read',
                        'question'    => 'read',
                        'answer'      => 'read',
                        'result'      => 'read',
                        'file'        => 'read',
                        'contributor' => 'read',
                        'decoder'     => 'read',
                        'invigilator' => 'read',
                        'student'     => 'read',
                        'corrector'   => 'read'
                ),
                'corrector'   => array(
                        'exam'        => 'read',
                        'topic'       => 'read',
                        'question'    => 'read',
                        'answer'      => 'read',
                        'result'      => '*',
                        'student'     => 'read',
                        'corrector'   => 'read',
                        'contributor' => 'read',
                        'decoder'     => 'read',
                        'invigilator' => 'read'
                ),
                'student'     => array(
                        'exam'        => 'read',
                        'topic'       => 'read',
                        'question'    => 'read',
                        'answer'      => '*',
                        'resource'    => 'read',
                        'file'        => '*',
                        'corrector'   => 'read',
                        'result'      => 'read',
                        'student'     => 'read'
                )
        ),
        // 
        // Controller access map.
        // 
        // Defines which roles are allowed to execute controller actions. The data 
        // structure are protection -> controller -> actions -> roles, where actions 
        // or roles uses '*' to denote all access. 
        // 
        // The protection is either public, protected or private. Using protected 
        // means that authentication is required, but might be handled internal by 
        // the controller/action.
        // 
        'public' => array(
                'index' => array('*'),
                'error'  => array('*'),
                'signup' => array('index')
        ),
        'protected'      => array(
                'soap'   => array('*'),
                'auth'   => array('*')
        ),
        'private' => array(
                'exam' => array(
                        'index'       => array('*'),
                        'create'      => array('teacher'),
                        'update'      => array('creator', 'contributor'),
                        'replicate'   => array('teacher'),
                        'instruction' => array('creator', 'student'),
                        'students'    => array('invigilator'),
                        'settings'    => array('creator'),
                        'security'    => array('creator', 'invigilator'),
                        'check'       => array('creator', 'invigilator'),
                        'lock'        => array('creator', 'invigilator'),
                        'archive'     => array('creator'),
                        'start'       => array('student'),
                        'details'     => array('@'),
                        'decode'      => array('decoder')
                ),
                'question' => array(
                        'create'      => array('creator', 'contributor'),
                        'update'      => array('creator', 'contributor'),
                        'view'        => array('creator', 'contributor', 'student'),
                        'correction'  => array('creator', 'decoder', 'corrector', 'invigilator')
                ),
                'result' => array(
                        'view'        => array('decoder', 'student'),
                        'generate'    => array('decoder'),
                        'download'    => array('corrector', 'decoder', 'student'),
                        'export'      => array('corrector', 'decoder')
                ),
                'import' => array(
                        'students'    => array('invigilator')
                ),
                'export' => array(
                        'students'    => array('invigilator')
                ),
                'task'   => array(
                        'contribute'  => array('contributor'),
                        'correct'     => array('corrector'),
                        'invigilate'  => array('invigilator'),
                        'decode'      => array('decoder'),
                        'result'      => array('student', 'decoder'),
                        'ongoing'     => array('student')
                ),
                'media'  => array(
                        'library'     => array('contributor'),
                        'upload'      => array('contributor'),
                        'view'        => array('contributor', 'student')
                ),
                'render' => array(
                        'decoder'     => array('decoder', 'creator', 'corrector'),
                        'student'     => array('student', 'creator', 'corrector', 'decoder'),
                        'find'        => array('creator', 'decoder', 'student'),
                        'add'         => array('creator', 'decoder', 'student'),
                        'cancel'      => array('creator', 'decoder', 'student'),
                        'status'      => array('creator', 'decoder', 'student'),
                        'result'      => array('creator', 'decoder', 'student'),
                        'delete'      => array('creator', 'decoder', 'student'),
                        'refresh'     => array('creator', 'decoder', 'student'),
                        'download'    => array('creator', 'decoder', 'student')
                )
        )
);
